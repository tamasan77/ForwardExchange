{
  "contractName": "CollateralWalletFactory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newWalletAddress",
          "type": "address"
        }
      ],
      "name": "CreatedWallet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "collateralWallets",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "testAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_walletName",
          "type": "string"
        }
      ],
      "name": "createCollateralWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newWalletAddress\",\"type\":\"address\"}],\"name\":\"CreatedWallet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"collateralWallets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_walletName\",\"type\":\"string\"}],\"name\":\"createCollateralWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Tamas An\",\"kind\":\"dev\",\"methods\":{\"createCollateralWallet(string)\":{\"params\":{\"_walletName\":\"name of wallet\"}}},\"title\":\"Collateral Wallet Factory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createCollateralWallet(string)\":{\"notice\":\"Creates new collateral wallet with given name and owner.\"}},\"notice\":\"Factory for creating and storing collateral wallets\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/collateral-wallet/CollateralWalletFactory.sol\":\"CollateralWalletFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xa35b1f2a670cd2a701a52c398032c9fed72df1909fe394d77ceacbf074e8937b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72b957861691ebdaa78c52834465c4f8296480fe4f1a12ba72dc6c0c8ac076dd\",\"dweb:/ipfs/QmVz1sHCwgEivHPRDswdt9tdvky7EnWqFmbuk1wFE55VMG\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd\",\"dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"project:/contracts/collateral-wallet/CollateralWallet.sol\":{\"keccak256\":\"0x1078ae51eceb1b72dfde399503be06caf666eb803421f405ce66525d77942e9e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8200dba6ac0f7b5d5a0ccede4819de3b06bcc958554c3e670f5c3e025d65f3fc\",\"dweb:/ipfs/Qmcn6boTKhBieBuAUct9zwFVhDt3yLYMsG8JUugLcJ5o2i\"]},\"project:/contracts/collateral-wallet/CollateralWalletFactory.sol\":{\"keccak256\":\"0xb2c94bc5074bcd048c5d8b182fa19444645ad3fe39015fa0bcbf0a4257a47b9d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://09ffce2b65675a2136cd19a1f78014f4372906564dc13f918912e11439eac187\",\"dweb:/ipfs/Qmd141nhePFDFSP7cuw8Fx8myTqDVPTYKuBtgsQngnW1WC\"]},\"project:/contracts/collateral-wallet/interfaces/ICollateralWallet.sol\":{\"keccak256\":\"0xe7cda9cbc2e446f08f7746db6fd91809a28ab143021fd6cc7d35d5e3fab590dd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://018e05f171019b8cd1ef12b84548a00ca26cb2b6c54d70c92917c2b1e22e2f25\",\"dweb:/ipfs/QmYeQFgTioi6H6hxRR5dHE4EX7QZQf97qWVgEtKtjGhj3p\"]},\"project:/contracts/collateral-wallet/interfaces/ICollateralWalletFactory.sol\":{\"keccak256\":\"0x77b979c0579e8311e404fcfd269ad870a6711f0acddb7ca67f8549b8f278ccdd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://40bdd371ab27e9e571ec94f70bcf8b8110be0a18011cf7f16f80eda222e83b67\",\"dweb:/ipfs/QmVvoXjnxBZ6nkqvvqnYoyETWqYHR2irhKT5Xf3PNGHKf3\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061163c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063034b1de514610046578063262330b4146100755780635c16a60d14610088575b600080fd5b610059610054366004610193565b61009d565b6040516001600160a01b03909116815260200160405180910390f35b600154610059906001600160a01b031681565b61009b6100963660046101c2565b6100c7565b005b600081815481106100ad57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000816040516100d690610186565b6100e091906102c0565b604051809103906000f0801580156100fc573d6000803e3d6000fd5b50600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319166001600160a01b0383161790556040519091507fb88a389e95d6a9c4d9220dcb10a5f46a3dccf41a742e80ae69d875cc894dc2e69061017a90849084906102da565b60405180910390a15050565b6113028061030583390190565b6000602082840312156101a557600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156101d457600080fd5b813567ffffffffffffffff808211156101ec57600080fd5b818401915084601f83011261020057600080fd5b813581811115610212576102126101ac565b604051601f8201601f19908116603f0116810190838211818310171561023a5761023a6101ac565b8160405282815287602084870101111561025357600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b818110156102995760208185018101518683018201520161027d565b818111156102ab576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006102d36020830184610273565b9392505050565b6040815260006102ed6040830185610273565b905060018060a01b0383166020830152939250505056fe60806040523480156200001157600080fd5b50604051620013023803806200130283398101604081905262000034916200017b565b6000805460ff19169055620000493362000066565b80516200005e906004906020840190620000bf565b505062000294565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b828054620000cd9062000257565b90600052602060002090601f016020900481019282620000f157600085556200013c565b82601f106200010c57805160ff19168380011785556200013c565b828001600101855582156200013c579182015b828111156200013c5782518255916020019190600101906200011f565b506200014a9291506200014e565b5090565b5b808211156200014a57600081556001016200014f565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200018f57600080fd5b82516001600160401b0380821115620001a757600080fd5b818501915085601f830112620001bc57600080fd5b815181811115620001d157620001d162000165565b604051601f8201601f19908116603f01168101908382118183101715620001fc57620001fc62000165565b8160405282815288868487010111156200021557600080fd5b600093505b828410156200023957848401860151818501870152928501926200021a565b828411156200024b5760008684830101525b98975050505050505050565b600181811c908216806200026c57607f821691505b602082108114156200028e57634e487b7160e01b600052602260045260246000fd5b50919050565b61105e80620002a46000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063d01cdff211610066578063d01cdff214610254578063daf2fd5814610267578063e0b4d0201461027a578063f2fde38b1461028d57600080fd5b80638da5cb5b146101f6578063a08225651461020c578063c282bc0e1461022c578063cf8d8ca01461023f57600080fd5b80636e15181e116100d35780636e15181e14610196578063715018a6146101b957806378cfad85146101c3578063860ffea1146101e357600080fd5b80634f64b2be14610105578063504a2b32146101355780635c975abb146101565780635eb3c89d1461016d575b600080fd5b610118610113366004610db2565b6102a0565b6040516001600160a01b0390911681526020015b60405180910390f35b610148610143366004610de7565b6102ca565b60405190815260200161012c565b60005460ff165b604051901515815260200161012c565b61011861017b366004610e11565b6005602052600090815260409020546001600160a01b031681565b61015d6101a4366004610e11565b60026020526000908152604090205460ff1681565b6101c1610304565b005b6101486101d1366004610e11565b60076020526000908152604090205481565b6101c16101f1366004610e3a565b610375565b60005461010090046001600160a01b0316610118565b61014861021a366004610e11565b60066020526000908152604090205481565b61014861023a366004610e3a565b6106cf565b61024761083c565b60405161012c9190610e79565b6101c1610262366004610ece565b6108ca565b6101c1610275366004610e11565b610b06565b610118610288366004610db2565b610c78565b6101c161029b366004610e11565b610c88565b600181815481106102b057600080fd5b6000918252602090912001546001600160a01b0316905081565b6000808213156102e3576102e0836001846106cf565b90505b60008212156102fe576102fb83600061023a85610f40565b90505b92915050565b6000546001600160a01b036101009091041633146103695760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6103736000610d59565b565b6001600160a01b03808416600090815260056020526040902054168215610532576001600160a01b0384811660009081526008602052604090819020549051636eb1769f60e11b8152908216600482018190523060248301529184919084169063dd62ed3e9060440160206040518083038186803b1580156103f657600080fd5b505afa15801561040a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042e9190610f5d565b1161046b5760405162461bcd60e51b815260206004820152600d60248201526c30b63637bbb0b731b29032b93960991b6044820152606401610360565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd9061049b90849030908890600401610f76565b602060405180830381600087803b1580156104b557600080fd5b505af11580156104c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ed9190610f9a565b506001600160a01b0385166000908152600660205260409020546105118482610fbe565b6001600160a01b038716600090815260066020526040902055506106c99050565b6001600160a01b0384811660009081526009602052604090819020549051636eb1769f60e11b8152908216600482018190523060248301529184919084169063dd62ed3e9060440160206040518083038186803b15801561059257600080fd5b505afa1580156105a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ca9190610f5d565b116106075760405162461bcd60e51b815260206004820152600d60248201526c30b63637bbb0b731b29032b93960991b6044820152606401610360565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd9061063790849030908890600401610f76565b602060405180830381600087803b15801561065157600080fd5b505af1158015610665573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106899190610f9a565b506001600160a01b0385166000908152600760205260409020546106ad8482610fbe565b6001600160a01b03871660009081526007602052604090205550505b50505050565b6001600160a01b038316600090815260066020908152604080832054600790925282205484156107985783821061074b5761070a8483610fd6565b6001600160a01b03871660009081526006602052604090205561072d8482610fbe565b6001600160a01b038716600090815260076020526040902055610833565b6001600160a01b03861660009081526006602052604081205561076e8282610fbe565b6001600160a01b0387166000908152600760205260409020556107918285610fd6565b9250610833565b8381106107ea576107a98482610fd6565b6001600160a01b0387166000908152600760205260409020556107cc8483610fbe565b6001600160a01b038716600090815260066020526040902055610833565b6001600160a01b03861660009081526007602052604081205561080d8183610fbe565b6001600160a01b0387166000908152600660205260409020556108308185610fd6565b92505b50509392505050565b6004805461084990610fed565b80601f016020809104026020016040519081016040528092919081815260200182805461087590610fed565b80156108c25780601f10610897576101008083540402835291602001916108c2565b820191906000526020600020905b8154815290600101906020018083116108a557829003601f168201915b505050505081565b6001600160a01b03821660009081526002602052604090205460ff1661094b576001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0385169081179091556000908152600260205260409020805460ff191690911790555b60038054600181019091557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b03199081166001600160a01b0388811691821790935560009081526005602090815260408083208054851688871690811790915560088352818420805486168b8816179055600990925291829020805490931693871693909317909155516323b872dd60e01b81526323b872dd90610a0190879030908690600401610f76565b602060405180830381600087803b158015610a1b57600080fd5b505af1158015610a2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a539190610f9a565b506040516323b872dd60e01b81526001600160a01b038316906323b872dd90610a8490869030908690600401610f76565b602060405180830381600087803b158015610a9e57600080fd5b505af1158015610ab2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad69190610f9a565b506001600160a01b0390941660009081526006602090815260408083208790556007909152902093909355505050565b6001600160a01b03818116600090815260056020908152604080832054600983528184205460079093529281902054905163a9059cbb60e01b81529184166004830152602482015291169063a9059cbb90604401602060405180830381600087803b158015610b7457600080fd5b505af1158015610b88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bac9190610f9a565b506001600160a01b0381811660009081526007602090815260408083208390556005825280832054600883528184205460069093529281902054905163a9059cbb60e01b81529184166004830152602482015291169063a9059cbb90604401602060405180830381600087803b158015610c2557600080fd5b505af1158015610c39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5d9190610f9a565b506001600160a01b0316600090815260066020526040812055565b600381815481106102b057600080fd5b6000546001600160a01b03610100909104163314610ce85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610360565b6001600160a01b038116610d4d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610360565b610d5681610d59565b50565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b600060208284031215610dc457600080fd5b5035919050565b80356001600160a01b0381168114610de257600080fd5b919050565b60008060408385031215610dfa57600080fd5b610e0383610dcb565b946020939093013593505050565b600060208284031215610e2357600080fd5b6102fb82610dcb565b8015158114610d5657600080fd5b600080600060608486031215610e4f57600080fd5b610e5884610dcb565b92506020840135610e6881610e2c565b929592945050506040919091013590565b600060208083528351808285015260005b81811015610ea657858101830151858201604001528201610e8a565b81811115610eb8576000604083870101525b50601f01601f1916929092016040019392505050565b600080600080600060a08688031215610ee657600080fd5b610eef86610dcb565b9450610efd60208701610dcb565b9350610f0b60408701610dcb565b9250610f1960608701610dcb565b949793965091946080013592915050565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b821415610f5657610f56610f2a565b5060000390565b600060208284031215610f6f57600080fd5b5051919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215610fac57600080fd5b8151610fb781610e2c565b9392505050565b60008219821115610fd157610fd1610f2a565b500190565b600082821015610fe857610fe8610f2a565b500390565b600181811c9082168061100157607f821691505b6020821081141561102257634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220ae88aeb7b852a3658046002e987fdacbfd86bf9e95d7b1d2623b243f5d0411d364736f6c63430008090033a264697066735822122027da45a74783f2e26bddcafbd8bdb94405a4dbbfa22cf8739a2e5323c4d80c1e64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063034b1de514610046578063262330b4146100755780635c16a60d14610088575b600080fd5b610059610054366004610193565b61009d565b6040516001600160a01b03909116815260200160405180910390f35b600154610059906001600160a01b031681565b61009b6100963660046101c2565b6100c7565b005b600081815481106100ad57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000816040516100d690610186565b6100e091906102c0565b604051809103906000f0801580156100fc573d6000803e3d6000fd5b50600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319166001600160a01b0383161790556040519091507fb88a389e95d6a9c4d9220dcb10a5f46a3dccf41a742e80ae69d875cc894dc2e69061017a90849084906102da565b60405180910390a15050565b6113028061030583390190565b6000602082840312156101a557600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156101d457600080fd5b813567ffffffffffffffff808211156101ec57600080fd5b818401915084601f83011261020057600080fd5b813581811115610212576102126101ac565b604051601f8201601f19908116603f0116810190838211818310171561023a5761023a6101ac565b8160405282815287602084870101111561025357600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b818110156102995760208185018101518683018201520161027d565b818111156102ab576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006102d36020830184610273565b9392505050565b6040815260006102ed6040830185610273565b905060018060a01b0383166020830152939250505056fe60806040523480156200001157600080fd5b50604051620013023803806200130283398101604081905262000034916200017b565b6000805460ff19169055620000493362000066565b80516200005e906004906020840190620000bf565b505062000294565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b828054620000cd9062000257565b90600052602060002090601f016020900481019282620000f157600085556200013c565b82601f106200010c57805160ff19168380011785556200013c565b828001600101855582156200013c579182015b828111156200013c5782518255916020019190600101906200011f565b506200014a9291506200014e565b5090565b5b808211156200014a57600081556001016200014f565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200018f57600080fd5b82516001600160401b0380821115620001a757600080fd5b818501915085601f830112620001bc57600080fd5b815181811115620001d157620001d162000165565b604051601f8201601f19908116603f01168101908382118183101715620001fc57620001fc62000165565b8160405282815288868487010111156200021557600080fd5b600093505b828410156200023957848401860151818501870152928501926200021a565b828411156200024b5760008684830101525b98975050505050505050565b600181811c908216806200026c57607f821691505b602082108114156200028e57634e487b7160e01b600052602260045260246000fd5b50919050565b61105e80620002a46000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063d01cdff211610066578063d01cdff214610254578063daf2fd5814610267578063e0b4d0201461027a578063f2fde38b1461028d57600080fd5b80638da5cb5b146101f6578063a08225651461020c578063c282bc0e1461022c578063cf8d8ca01461023f57600080fd5b80636e15181e116100d35780636e15181e14610196578063715018a6146101b957806378cfad85146101c3578063860ffea1146101e357600080fd5b80634f64b2be14610105578063504a2b32146101355780635c975abb146101565780635eb3c89d1461016d575b600080fd5b610118610113366004610db2565b6102a0565b6040516001600160a01b0390911681526020015b60405180910390f35b610148610143366004610de7565b6102ca565b60405190815260200161012c565b60005460ff165b604051901515815260200161012c565b61011861017b366004610e11565b6005602052600090815260409020546001600160a01b031681565b61015d6101a4366004610e11565b60026020526000908152604090205460ff1681565b6101c1610304565b005b6101486101d1366004610e11565b60076020526000908152604090205481565b6101c16101f1366004610e3a565b610375565b60005461010090046001600160a01b0316610118565b61014861021a366004610e11565b60066020526000908152604090205481565b61014861023a366004610e3a565b6106cf565b61024761083c565b60405161012c9190610e79565b6101c1610262366004610ece565b6108ca565b6101c1610275366004610e11565b610b06565b610118610288366004610db2565b610c78565b6101c161029b366004610e11565b610c88565b600181815481106102b057600080fd5b6000918252602090912001546001600160a01b0316905081565b6000808213156102e3576102e0836001846106cf565b90505b60008212156102fe576102fb83600061023a85610f40565b90505b92915050565b6000546001600160a01b036101009091041633146103695760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6103736000610d59565b565b6001600160a01b03808416600090815260056020526040902054168215610532576001600160a01b0384811660009081526008602052604090819020549051636eb1769f60e11b8152908216600482018190523060248301529184919084169063dd62ed3e9060440160206040518083038186803b1580156103f657600080fd5b505afa15801561040a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042e9190610f5d565b1161046b5760405162461bcd60e51b815260206004820152600d60248201526c30b63637bbb0b731b29032b93960991b6044820152606401610360565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd9061049b90849030908890600401610f76565b602060405180830381600087803b1580156104b557600080fd5b505af11580156104c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ed9190610f9a565b506001600160a01b0385166000908152600660205260409020546105118482610fbe565b6001600160a01b038716600090815260066020526040902055506106c99050565b6001600160a01b0384811660009081526009602052604090819020549051636eb1769f60e11b8152908216600482018190523060248301529184919084169063dd62ed3e9060440160206040518083038186803b15801561059257600080fd5b505afa1580156105a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ca9190610f5d565b116106075760405162461bcd60e51b815260206004820152600d60248201526c30b63637bbb0b731b29032b93960991b6044820152606401610360565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd9061063790849030908890600401610f76565b602060405180830381600087803b15801561065157600080fd5b505af1158015610665573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106899190610f9a565b506001600160a01b0385166000908152600760205260409020546106ad8482610fbe565b6001600160a01b03871660009081526007602052604090205550505b50505050565b6001600160a01b038316600090815260066020908152604080832054600790925282205484156107985783821061074b5761070a8483610fd6565b6001600160a01b03871660009081526006602052604090205561072d8482610fbe565b6001600160a01b038716600090815260076020526040902055610833565b6001600160a01b03861660009081526006602052604081205561076e8282610fbe565b6001600160a01b0387166000908152600760205260409020556107918285610fd6565b9250610833565b8381106107ea576107a98482610fd6565b6001600160a01b0387166000908152600760205260409020556107cc8483610fbe565b6001600160a01b038716600090815260066020526040902055610833565b6001600160a01b03861660009081526007602052604081205561080d8183610fbe565b6001600160a01b0387166000908152600660205260409020556108308185610fd6565b92505b50509392505050565b6004805461084990610fed565b80601f016020809104026020016040519081016040528092919081815260200182805461087590610fed565b80156108c25780601f10610897576101008083540402835291602001916108c2565b820191906000526020600020905b8154815290600101906020018083116108a557829003601f168201915b505050505081565b6001600160a01b03821660009081526002602052604090205460ff1661094b576001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0385169081179091556000908152600260205260409020805460ff191690911790555b60038054600181019091557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b03199081166001600160a01b0388811691821790935560009081526005602090815260408083208054851688871690811790915560088352818420805486168b8816179055600990925291829020805490931693871693909317909155516323b872dd60e01b81526323b872dd90610a0190879030908690600401610f76565b602060405180830381600087803b158015610a1b57600080fd5b505af1158015610a2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a539190610f9a565b506040516323b872dd60e01b81526001600160a01b038316906323b872dd90610a8490869030908690600401610f76565b602060405180830381600087803b158015610a9e57600080fd5b505af1158015610ab2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad69190610f9a565b506001600160a01b0390941660009081526006602090815260408083208790556007909152902093909355505050565b6001600160a01b03818116600090815260056020908152604080832054600983528184205460079093529281902054905163a9059cbb60e01b81529184166004830152602482015291169063a9059cbb90604401602060405180830381600087803b158015610b7457600080fd5b505af1158015610b88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bac9190610f9a565b506001600160a01b0381811660009081526007602090815260408083208390556005825280832054600883528184205460069093529281902054905163a9059cbb60e01b81529184166004830152602482015291169063a9059cbb90604401602060405180830381600087803b158015610c2557600080fd5b505af1158015610c39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5d9190610f9a565b506001600160a01b0316600090815260066020526040812055565b600381815481106102b057600080fd5b6000546001600160a01b03610100909104163314610ce85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610360565b6001600160a01b038116610d4d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610360565b610d5681610d59565b50565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b600060208284031215610dc457600080fd5b5035919050565b80356001600160a01b0381168114610de257600080fd5b919050565b60008060408385031215610dfa57600080fd5b610e0383610dcb565b946020939093013593505050565b600060208284031215610e2357600080fd5b6102fb82610dcb565b8015158114610d5657600080fd5b600080600060608486031215610e4f57600080fd5b610e5884610dcb565b92506020840135610e6881610e2c565b929592945050506040919091013590565b600060208083528351808285015260005b81811015610ea657858101830151858201604001528201610e8a565b81811115610eb8576000604083870101525b50601f01601f1916929092016040019392505050565b600080600080600060a08688031215610ee657600080fd5b610eef86610dcb565b9450610efd60208701610dcb565b9350610f0b60408701610dcb565b9250610f1960608701610dcb565b949793965091946080013592915050565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b821415610f5657610f56610f2a565b5060000390565b600060208284031215610f6f57600080fd5b5051919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215610fac57600080fd5b8151610fb781610e2c565b9392505050565b60008219821115610fd157610fd1610f2a565b500190565b600082821015610fe857610fe8610f2a565b500390565b600181811c9082168061100157607f821691505b6020821081141561102257634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220ae88aeb7b852a3658046002e987fdacbfd86bf9e95d7b1d2623b243f5d0411d364736f6c63430008090033a264697066735822122027da45a74783f2e26bddcafbd8bdb94405a4dbbfa22cf8739a2e5323c4d80c1e64736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2487:43",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:43",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:43",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:43",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:43",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:43"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:43"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:43"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:43"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:43"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:43",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:43",
                "type": ""
              }
            ],
            "src": "14:180:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:102:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "310:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "322:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "333:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "318:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "318:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "310:4:43"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "352:9:43"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "367:6:43"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "383:3:43",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "388:1:43",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "379:3:43"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "379:11:43"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "392:1:43",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "375:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "375:19:43"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "363:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "363:32:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "345:51:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "345:51:43"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "269:9:43",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "280:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "291:4:43",
                "type": ""
              }
            ],
            "src": "199:203:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "439:95:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "456:1:43",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "463:3:43",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "468:10:43",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "459:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "459:20:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "449:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "449:31:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "449:31:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:1:43",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "499:4:43",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "489:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "489:15:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "489:15:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "520:1:43",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "523:4:43",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "513:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "513:15:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "513:15:43"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "407:127:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "619:842:43",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "665:16:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "674:1:43",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:43",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "667:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "667:12:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "667:12:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "640:7:43"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "649:9:43"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "636:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "636:23:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "661:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "632:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "632:32:43"
                  },
                  "nodeType": "YulIf",
                  "src": "629:52:43"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "690:37:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "717:9:43"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "704:12:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "704:23:43"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "694:6:43",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "736:28:43",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "746:18:43",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "740:2:43",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "791:16:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "800:1:43",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "803:1:43",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "793:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "793:12:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "793:12:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "779:6:43"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "787:2:43"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "776:2:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "776:14:43"
                  },
                  "nodeType": "YulIf",
                  "src": "773:34:43"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "816:32:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "830:9:43"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "841:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "826:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "826:22:43"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "820:2:43",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "896:16:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "905:1:43",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "908:1:43",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "898:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "898:12:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "898:12:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "875:2:43"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "879:4:43",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "871:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "871:13:43"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "886:7:43"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "867:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "867:27:43"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "860:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "860:35:43"
                  },
                  "nodeType": "YulIf",
                  "src": "857:55:43"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "921:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "944:2:43"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "931:12:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "931:16:43"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "925:2:43",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "970:22:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "972:16:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "972:18:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "972:18:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "962:2:43"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "966:2:43"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "959:2:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "959:10:43"
                  },
                  "nodeType": "YulIf",
                  "src": "956:36:43"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1001:17:43",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1015:2:43",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1011:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1011:7:43"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "1005:2:43",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1027:23:43",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1047:2:43",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1041:5:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1041:9:43"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1031:6:43",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1059:71:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1081:6:43"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1105:2:43"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1109:4:43",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1101:3:43"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1101:13:43"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1116:2:43"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1097:3:43"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1097:22:43"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1121:2:43",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1093:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1093:31:43"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1126:2:43"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1089:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1089:40:43"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1077:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1077:53:43"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1063:10:43",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1189:22:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1191:16:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1191:18:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1191:18:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1148:10:43"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1160:2:43"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1145:2:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1145:18:43"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1168:10:43"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1180:6:43"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1165:2:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1165:22:43"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1142:2:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1142:46:43"
                  },
                  "nodeType": "YulIf",
                  "src": "1139:72:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1227:2:43",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1231:10:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1220:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1220:22:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1220:22:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1258:6:43"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1266:2:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1251:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:18:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1251:18:43"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1315:16:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1324:1:43",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1327:1:43",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1317:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1317:12:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1317:12:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1292:2:43"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1296:2:43"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1288:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1288:11:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1301:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1284:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1284:20:43"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1306:7:43"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1281:2:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1281:33:43"
                  },
                  "nodeType": "YulIf",
                  "src": "1278:53:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1357:6:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1365:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1353:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1353:15:43"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1374:2:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1378:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1370:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1370:11:43"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1383:2:43"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1340:12:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1340:46:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1340:46:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1410:6:43"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1418:2:43"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1406:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1406:15:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1423:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1402:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1402:24:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1428:1:43",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1395:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1395:35:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1395:35:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1439:16:43",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1449:6:43"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1439:6:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "585:9:43",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "596:7:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "608:6:43",
                "type": ""
              }
            ],
            "src": "539:922:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1516:422:43",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1526:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1546:5:43"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1540:5:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1540:12:43"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1530:6:43",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1568:3:43"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1573:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1561:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1561:19:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1561:19:43"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1589:10:43",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1598:1:43",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1593:1:43",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1660:110:43",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1674:14:43",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1684:4:43",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "1678:2:43",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "1716:3:43"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1721:1:43"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1712:3:43"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1712:11:43"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1725:2:43"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1708:3:43"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1708:20:43"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "1744:5:43"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1751:1:43"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1740:3:43"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1740:13:43"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1755:2:43"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1736:3:43"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1736:22:43"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1730:5:43"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1730:29:43"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1701:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1701:59:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1701:59:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1619:1:43"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1622:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1616:2:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1616:13:43"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1630:21:43",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1632:17:43",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1641:1:43"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1644:4:43",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1637:3:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1637:12:43"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1632:1:43"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1612:3:43",
                    "statements": []
                  },
                  "src": "1608:162:43"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1804:62:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "1833:3:43"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "1838:6:43"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1829:3:43"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1829:16:43"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1847:4:43",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1825:3:43"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1825:27:43"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1854:1:43",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1818:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1818:38:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1818:38:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1785:1:43"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1788:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1782:2:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1782:13:43"
                  },
                  "nodeType": "YulIf",
                  "src": "1779:87:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1875:57:43",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1890:3:43"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1903:6:43"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1911:2:43",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1899:3:43"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1899:15:43"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1920:2:43",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1916:3:43"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1916:7:43"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1895:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1895:29:43"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1886:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1886:39:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1927:4:43",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1882:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1882:50:43"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1875:3:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1493:5:43",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1500:3:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1508:3:43",
                "type": ""
              }
            ],
            "src": "1466:472:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2064:99:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2081:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2092:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2074:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2074:21:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2074:21:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2104:53:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2130:6:43"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2142:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2153:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2138:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2138:18:43"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2112:17:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2112:45:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2104:4:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2033:9:43",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2044:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2055:4:43",
                "type": ""
              }
            ],
            "src": "1943:220:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2317:168:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2334:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2345:2:43",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2327:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2327:21:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2327:21:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2357:53:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2383:6:43"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2395:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2406:2:43",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2391:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2391:18:43"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2365:17:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2365:45:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2357:4:43"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2430:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2441:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2426:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2426:18:43"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2450:6:43"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2466:3:43",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2471:1:43",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2462:3:43"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2462:11:43"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2475:1:43",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2458:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2458:19:43"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2446:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2446:32:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2419:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2419:60:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2419:60:43"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2278:9:43",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2289:6:43",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2297:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2308:4:43",
                "type": ""
              }
            ],
            "src": "2168:317:43"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 43,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "281:570:21:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "281:570:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;348:34;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;363:32:43;;;345:51;;333:2;318:18;348:34:21;;;;;;;389:26;;;;;-1:-1:-1;;;;;389:26:21;;;541:305;;;;;;:::i;:::-;;:::i;:::-;;348:34;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:34:21;;-1:-1:-1;348:34:21;:::o;541:305::-;634:32;698:11;677:33;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;722:17:21;:48;;;;;;;;;;;;;;-1:-1:-1;;;;;;722:48:21;-1:-1:-1;;;;;722:48:21;;;;;786:52;;722:48;;-1:-1:-1;786:52:21;;;;800:11;;722:48;;786:52;:::i;:::-;;;;;;;;623:223;541:305;:::o;-1:-1:-1:-;;;;;;;;:::o;14:180:43:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:43;;14:180;-1:-1:-1;14:180:43:o;407:127::-;468:10;463:3;459:20;456:1;449:31;499:4;496:1;489:15;523:4;520:1;513:15;539:922;608:6;661:2;649:9;640:7;636:23;632:32;629:52;;;677:1;674;667:12;629:52;717:9;704:23;746:18;787:2;779:6;776:14;773:34;;;803:1;800;793:12;773:34;841:6;830:9;826:22;816:32;;886:7;879:4;875:2;871:13;867:27;857:55;;908:1;905;898:12;857:55;944:2;931:16;966:2;962;959:10;956:36;;;972:18;;:::i;:::-;1047:2;1041:9;1015:2;1101:13;;-1:-1:-1;;1097:22:43;;;1121:2;1093:31;1089:40;1077:53;;;1145:18;;;1165:22;;;1142:46;1139:72;;;1191:18;;:::i;:::-;1231:10;1227:2;1220:22;1266:2;1258:6;1251:18;1306:7;1301:2;1296;1292;1288:11;1284:20;1281:33;1278:53;;;1327:1;1324;1317:12;1278:53;1383:2;1378;1374;1370:11;1365:2;1357:6;1353:15;1340:46;1428:1;1406:15;;;1423:2;1402:24;1395:35;;;;-1:-1:-1;1410:6:43;539:922;-1:-1:-1;;;;;539:922:43:o;1466:472::-;1508:3;1546:5;1540:12;1573:6;1568:3;1561:19;1598:1;1608:162;1622:6;1619:1;1616:13;1608:162;;;1684:4;1740:13;;;1736:22;;1730:29;1712:11;;;1708:20;;1701:59;1637:12;1608:162;;;1788:6;1785:1;1782:13;1779:87;;;1854:1;1847:4;1838:6;1833:3;1829:16;1825:27;1818:38;1779:87;-1:-1:-1;1920:2:43;1899:15;-1:-1:-1;;1895:29:43;1886:39;;;;1927:4;1882:50;;1466:472;-1:-1:-1;;1466:472:43:o;1943:220::-;2092:2;2081:9;2074:21;2055:4;2112:45;2153:2;2142:9;2138:18;2130:6;2112:45;:::i;:::-;2104:53;1943:220;-1:-1:-1;;;1943:220:43:o;2168:317::-;2345:2;2334:9;2327:21;2308:4;2365:45;2406:2;2395:9;2391:18;2383:6;2365:45;:::i;:::-;2357:53;;2475:1;2471;2466:3;2462:11;2458:19;2450:6;2446:32;2441:2;2430:9;2426:18;2419:60;2168:317;;;;;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.6;\r\n\r\nimport \"./CollateralWallet.sol\";\r\nimport \"./interfaces/ICollateralWalletFactory.sol\";\r\n\r\n/// @title Collateral Wallet Factory\r\n/// @author Tamas An\r\n/// @notice Factory for creating and storing collateral wallets\r\ncontract CollateralWalletFactory is ICollateralWalletFactory{\r\n    address[] public collateralWallets;\r\n    address public testAddress;\r\n\r\n    /// @notice Creates new collateral wallet with given name and owner.\r\n    /// @param _walletName name of wallet\r\n    function createCollateralWallet(string memory _walletName) external override\r\n    {\r\n        address collateralWalletAddress_ = address(new CollateralWallet(_walletName));\r\n        collateralWallets.push(collateralWalletAddress_);\r\n        emit CreatedWallet(_walletName, collateralWalletAddress_);\r\n    }\r\n\r\n}",
  "sourcePath": "C:\\Users\\Tomi\\OneDrive - The University of Chicago\\Documents\\Securrency\\ForwardExchange\\contracts\\collateral-wallet\\CollateralWalletFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/collateral-wallet/CollateralWalletFactory.sol",
    "exportedSymbols": {
      "Address": [
        3454
      ],
      "CollateralWallet": [
        4001
      ],
      "CollateralWalletFactory": [
        4044
      ],
      "Context": [
        3476
      ],
      "ICollateralWallet": [
        4106
      ],
      "ICollateralWalletFactory": [
        4122
      ],
      "IERC20": [
        2908
      ],
      "Ownable": [
        2192
      ],
      "Pausable": [
        2284
      ],
      "SafeERC20": [
        3157
      ]
    },
    "id": 4045,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4003,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:21"
      },
      {
        "absolutePath": "project:/contracts/collateral-wallet/CollateralWallet.sol",
        "file": "./CollateralWallet.sol",
        "id": 4004,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4045,
        "sourceUnit": 4002,
        "src": "67:32:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/collateral-wallet/interfaces/ICollateralWalletFactory.sol",
        "file": "./interfaces/ICollateralWalletFactory.sol",
        "id": 4005,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4045,
        "sourceUnit": 4123,
        "src": "101:51:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4007,
              "name": "ICollateralWalletFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4122,
              "src": "317:24:21"
            },
            "id": 4008,
            "nodeType": "InheritanceSpecifier",
            "src": "317:24:21"
          }
        ],
        "canonicalName": "CollateralWalletFactory",
        "contractDependencies": [
          4001
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 4006,
          "nodeType": "StructuredDocumentation",
          "src": "156:125:21",
          "text": "@title Collateral Wallet Factory\n @author Tamas An\n @notice Factory for creating and storing collateral wallets"
        },
        "fullyImplemented": true,
        "id": 4044,
        "linearizedBaseContracts": [
          4044,
          4122
        ],
        "name": "CollateralWalletFactory",
        "nameLocation": "290:23:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "034b1de5",
            "id": 4011,
            "mutability": "mutable",
            "name": "collateralWallets",
            "nameLocation": "365:17:21",
            "nodeType": "VariableDeclaration",
            "scope": 4044,
            "src": "348:34:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 4009,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "348:7:21",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 4010,
              "nodeType": "ArrayTypeName",
              "src": "348:9:21",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "262330b4",
            "id": 4013,
            "mutability": "mutable",
            "name": "testAddress",
            "nameLocation": "404:11:21",
            "nodeType": "VariableDeclaration",
            "scope": 4044,
            "src": "389:26:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4012,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "389:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4121
            ],
            "body": {
              "id": 4042,
              "nodeType": "Block",
              "src": "623:223:21",
              "statements": [
                {
                  "assignments": [
                    4021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4021,
                      "mutability": "mutable",
                      "name": "collateralWalletAddress_",
                      "nameLocation": "642:24:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 4042,
                      "src": "634:32:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4020,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "634:7:21",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4030,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4027,
                            "name": "_walletName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4016,
                            "src": "698:11:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 4026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "677:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$returns$_t_contract$_CollateralWallet_$4001_$",
                            "typeString": "function (string memory) returns (contract CollateralWallet)"
                          },
                          "typeName": {
                            "id": 4025,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 4024,
                              "name": "CollateralWallet",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 4001,
                              "src": "681:16:21"
                            },
                            "referencedDeclaration": 4001,
                            "src": "681:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CollateralWallet_$4001",
                              "typeString": "contract CollateralWallet"
                            }
                          }
                        },
                        "id": 4028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "677:33:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CollateralWallet_$4001",
                          "typeString": "contract CollateralWallet"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CollateralWallet_$4001",
                          "typeString": "contract CollateralWallet"
                        }
                      ],
                      "id": 4023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "669:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 4022,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "669:7:21",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 4029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "669:42:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "634:77:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4034,
                        "name": "collateralWalletAddress_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4021,
                        "src": "745:24:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4031,
                        "name": "collateralWallets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4011,
                        "src": "722:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 4033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "722:22:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 4035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "722:48:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4036,
                  "nodeType": "ExpressionStatement",
                  "src": "722:48:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4038,
                        "name": "_walletName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4016,
                        "src": "800:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4039,
                        "name": "collateralWalletAddress_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4021,
                        "src": "813:24:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4037,
                      "name": "CreatedWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4115,
                      "src": "786:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 4040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "786:52:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4041,
                  "nodeType": "EmitStatement",
                  "src": "781:57:21"
                }
              ]
            },
            "documentation": {
              "id": 4014,
              "nodeType": "StructuredDocumentation",
              "src": "424:111:21",
              "text": "@notice Creates new collateral wallet with given name and owner.\n @param _walletName name of wallet"
            },
            "functionSelector": "5c16a60d",
            "id": 4043,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCollateralWallet",
            "nameLocation": "550:22:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4018,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "609:8:21"
            },
            "parameters": {
              "id": 4017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4016,
                  "mutability": "mutable",
                  "name": "_walletName",
                  "nameLocation": "587:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4043,
                  "src": "573:25:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4015,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "573:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "572:27:21"
            },
            "returnParameters": {
              "id": 4019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "623:0:21"
            },
            "scope": 4044,
            "src": "541:305:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4045,
        "src": "281:570:21",
        "usedErrors": []
      }
    ],
    "src": "40:811:21"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/collateral-wallet/CollateralWalletFactory.sol",
    "exportedSymbols": {
      "Address": [
        3454
      ],
      "CollateralWallet": [
        4001
      ],
      "CollateralWalletFactory": [
        4044
      ],
      "Context": [
        3476
      ],
      "ICollateralWallet": [
        4106
      ],
      "ICollateralWalletFactory": [
        4122
      ],
      "IERC20": [
        2908
      ],
      "Ownable": [
        2192
      ],
      "Pausable": [
        2284
      ],
      "SafeERC20": [
        3157
      ]
    },
    "id": 4045,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4003,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:21"
      },
      {
        "absolutePath": "project:/contracts/collateral-wallet/CollateralWallet.sol",
        "file": "./CollateralWallet.sol",
        "id": 4004,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4045,
        "sourceUnit": 4002,
        "src": "67:32:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/collateral-wallet/interfaces/ICollateralWalletFactory.sol",
        "file": "./interfaces/ICollateralWalletFactory.sol",
        "id": 4005,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4045,
        "sourceUnit": 4123,
        "src": "101:51:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4007,
              "name": "ICollateralWalletFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4122,
              "src": "317:24:21"
            },
            "id": 4008,
            "nodeType": "InheritanceSpecifier",
            "src": "317:24:21"
          }
        ],
        "canonicalName": "CollateralWalletFactory",
        "contractDependencies": [
          4001
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 4006,
          "nodeType": "StructuredDocumentation",
          "src": "156:125:21",
          "text": "@title Collateral Wallet Factory\n @author Tamas An\n @notice Factory for creating and storing collateral wallets"
        },
        "fullyImplemented": true,
        "id": 4044,
        "linearizedBaseContracts": [
          4044,
          4122
        ],
        "name": "CollateralWalletFactory",
        "nameLocation": "290:23:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "034b1de5",
            "id": 4011,
            "mutability": "mutable",
            "name": "collateralWallets",
            "nameLocation": "365:17:21",
            "nodeType": "VariableDeclaration",
            "scope": 4044,
            "src": "348:34:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 4009,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "348:7:21",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 4010,
              "nodeType": "ArrayTypeName",
              "src": "348:9:21",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "262330b4",
            "id": 4013,
            "mutability": "mutable",
            "name": "testAddress",
            "nameLocation": "404:11:21",
            "nodeType": "VariableDeclaration",
            "scope": 4044,
            "src": "389:26:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4012,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "389:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4121
            ],
            "body": {
              "id": 4042,
              "nodeType": "Block",
              "src": "623:223:21",
              "statements": [
                {
                  "assignments": [
                    4021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4021,
                      "mutability": "mutable",
                      "name": "collateralWalletAddress_",
                      "nameLocation": "642:24:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 4042,
                      "src": "634:32:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4020,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "634:7:21",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4030,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4027,
                            "name": "_walletName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4016,
                            "src": "698:11:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 4026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "677:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$returns$_t_contract$_CollateralWallet_$4001_$",
                            "typeString": "function (string memory) returns (contract CollateralWallet)"
                          },
                          "typeName": {
                            "id": 4025,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 4024,
                              "name": "CollateralWallet",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 4001,
                              "src": "681:16:21"
                            },
                            "referencedDeclaration": 4001,
                            "src": "681:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CollateralWallet_$4001",
                              "typeString": "contract CollateralWallet"
                            }
                          }
                        },
                        "id": 4028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "677:33:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CollateralWallet_$4001",
                          "typeString": "contract CollateralWallet"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CollateralWallet_$4001",
                          "typeString": "contract CollateralWallet"
                        }
                      ],
                      "id": 4023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "669:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 4022,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "669:7:21",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 4029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "669:42:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "634:77:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4034,
                        "name": "collateralWalletAddress_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4021,
                        "src": "745:24:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4031,
                        "name": "collateralWallets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4011,
                        "src": "722:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 4033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "722:22:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 4035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "722:48:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4036,
                  "nodeType": "ExpressionStatement",
                  "src": "722:48:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4038,
                        "name": "_walletName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4016,
                        "src": "800:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4039,
                        "name": "collateralWalletAddress_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4021,
                        "src": "813:24:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4037,
                      "name": "CreatedWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4115,
                      "src": "786:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 4040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "786:52:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4041,
                  "nodeType": "EmitStatement",
                  "src": "781:57:21"
                }
              ]
            },
            "documentation": {
              "id": 4014,
              "nodeType": "StructuredDocumentation",
              "src": "424:111:21",
              "text": "@notice Creates new collateral wallet with given name and owner.\n @param _walletName name of wallet"
            },
            "functionSelector": "5c16a60d",
            "id": 4043,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCollateralWallet",
            "nameLocation": "550:22:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4018,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "609:8:21"
            },
            "parameters": {
              "id": 4017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4016,
                  "mutability": "mutable",
                  "name": "_walletName",
                  "nameLocation": "587:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4043,
                  "src": "573:25:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4015,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "573:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "572:27:21"
            },
            "returnParameters": {
              "id": 4019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "623:0:21"
            },
            "scope": 4044,
            "src": "541:305:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4045,
        "src": "281:570:21",
        "usedErrors": []
      }
    ],
    "src": "40:811:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x9965177B48D8b2f0dE67b7A9Dd2bc76d274FBB1F",
      "transactionHash": "0xdad929e1eb770568cf4d637b6215465f1d03350b59c78dc82a2eb06b31b81989"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-09-30T21:51:06.836Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Tamas An",
    "kind": "dev",
    "methods": {
      "createCollateralWallet(string)": {
        "params": {
          "_walletName": "name of wallet"
        }
      }
    },
    "title": "Collateral Wallet Factory",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createCollateralWallet(string)": {
        "notice": "Creates new collateral wallet with given name and owner."
      }
    },
    "notice": "Factory for creating and storing collateral wallets",
    "version": 1
  }
}